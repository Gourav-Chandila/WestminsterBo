<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-14T16:19:52 IST" name="Suite" finished-at="2024-05-14T16:21:20 IST" duration-ms="88052">
    <groups>
    </groups>
    <test started-at="2024-05-14T16:19:52 IST" name="FireFoxTest1" finished-at="2024-05-14T16:21:20 IST" duration-ms="88052">
      <class name="qa.test.TestSec50TestServerSfbo">
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:19:52 IST" name="beforeTestMethod" finished-at="2024-05-14T16:19:57 IST" duration-ms="4878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="OpenWestminsterBoUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:19:57 IST" name="OpenWestminsterBoUrl" finished-at="2024-05-14T16:20:33 IST" duration-ms="35619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.OpenWestminsterBoUrl(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenWestminsterBoUrl -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:33 IST" name="afterMethod" finished-at="2024-05-14T16:20:33 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenWestminsterBoUrl status=SUCCESS method=TestSec50TestServerSfbo.OpenWestminsterBoUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillBusinessDetails(java.lang.reflect.Method)[pri:2, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:33 IST" name="fillBusinessDetails" finished-at="2024-05-14T16:20:38 IST" duration-ms="4647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillBusinessDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBusinessDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:38 IST" name="afterMethod" finished-at="2024-05-14T16:20:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBusinessDetails status=SUCCESS method=TestSec50TestServerSfbo.fillBusinessDetails(java.lang.reflect.Method)[pri:2, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingApplicationDates(java.lang.reflect.Method)[pri:3, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:38 IST" name="fillingApplicationDates" finished-at="2024-05-14T16:20:41 IST" duration-ms="3607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillingApplicationDates(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingApplicationDates -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:41 IST" name="afterMethod" finished-at="2024-05-14T16:20:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingApplicationDates status=SUCCESS method=TestSec50TestServerSfbo.fillingApplicationDates(java.lang.reflect.Method)[pri:3, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingSiteDetails(java.lang.reflect.Method)[pri:4, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:41 IST" name="fillingSiteDetails" finished-at="2024-05-14T16:20:47 IST" duration-ms="5404" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillingSiteDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingSiteDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:47 IST" name="afterMethod" finished-at="2024-05-14T16:20:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingSiteDetails status=SUCCESS method=TestSec50TestServerSfbo.fillingSiteDetails(java.lang.reflect.Method)[pri:4, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillAboutTheWorkSection(java.lang.reflect.Method)[pri:5, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:47 IST" name="fillAboutTheWorkSection" finished-at="2024-05-14T16:20:48 IST" duration-ms="1429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillAboutTheWorkSection(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillAboutTheWorkSection -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:48 IST" name="afterMethod" finished-at="2024-05-14T16:20:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillAboutTheWorkSection status=SUCCESS method=TestSec50TestServerSfbo.fillAboutTheWorkSection(java.lang.reflect.Method)[pri:5, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillSupervisorDetails(java.lang.reflect.Method)[pri:6, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:48 IST" name="fillSupervisorDetails" finished-at="2024-05-14T16:20:57 IST" duration-ms="8479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillSupervisorDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillSupervisorDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:57 IST" name="afterMethod" finished-at="2024-05-14T16:20:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillSupervisorDetails status=SUCCESS method=TestSec50TestServerSfbo.fillSupervisorDetails(java.lang.reflect.Method)[pri:6, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillOperatorDetails(java.lang.reflect.Method)[pri:7, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:20:57 IST" name="fillOperatorDetails" finished-at="2024-05-14T16:21:06 IST" duration-ms="9324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.fillOperatorDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillOperatorDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:06 IST" name="afterMethod" finished-at="2024-05-14T16:21:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillOperatorDetails status=SUCCESS method=TestSec50TestServerSfbo.fillOperatorDetails(java.lang.reflect.Method)[pri:7, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="addDeclarations(java.lang.reflect.Method)[pri:8, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:06 IST" name="addDeclarations" finished-at="2024-05-14T16:21:14 IST" duration-ms="8400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.addDeclarations(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDeclarations -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:14 IST" name="afterMethod" finished-at="2024-05-14T16:21:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addDeclarations status=SUCCESS method=TestSec50TestServerSfbo.addDeclarations(java.lang.reflect.Method)[pri:8, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="checkOrderSummary(java.lang.reflect.Method)[pri:9, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:14 IST" name="checkOrderSummary" finished-at="2024-05-14T16:21:16 IST" duration-ms="2049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.checkOrderSummary(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOrderSummary -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:16 IST" name="afterMethod" finished-at="2024-05-14T16:21:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkOrderSummary status=SUCCESS method=TestSec50TestServerSfbo.checkOrderSummary(java.lang.reflect.Method)[pri:9, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="payFees(java.lang.reflect.Method)[pri:10, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:16 IST" name="payFees" finished-at="2024-05-14T16:21:20 IST" duration-ms="3724" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestSec50TestServerSfbo.payFees(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<Payment successful> but was:<null>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<Payment successful> but was:<null>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at qa.test.TestSec50TestServerSfbo.payFees(TestSec50TestServerSfbo.java:177)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payFees -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:20 IST" name="afterMethod" finished-at="2024-05-14T16:21:20 IST" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=payFees status=FAILURE method=TestSec50TestServerSfbo.payFees(java.lang.reflect.Method)[pri:10, instance:qa.test.TestSec50TestServerSfbo@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.test.TestSec50TestServerSfbo@cc43f62]" started-at="2024-05-14T16:21:20 IST" name="afterTest" finished-at="2024-05-14T16:21:20 IST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.test.TestSec50TestServerSfbo -->
    </test> <!-- FireFoxTest1 -->
  </suite> <!-- Suite -->
</testng-results>
