<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="18" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-16T13:32:44 IST" name="Suite" finished-at="2024-05-16T13:35:19 IST" duration-ms="155469">
    <groups>
    </groups>
    <test started-at="2024-05-16T13:32:44 IST" name="FireFoxTest" finished-at="2024-05-16T13:33:56 IST" duration-ms="72707">
      <class name="qa.test.TestPremiseAppUatSf">
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:32:44 IST" name="beforeTestMethod" finished-at="2024-05-16T13:32:49 IST" duration-ms="5647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="openLa_03LoginUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:32:49 IST" name="openLa_03LoginUrl" finished-at="2024-05-16T13:33:01 IST" duration-ms="11630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.openLa_03LoginUrl(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLa_03LoginUrl -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:01 IST" name="afterMethod" finished-at="2024-05-16T13:33:01 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLa_03LoginUrl status=SUCCESS method=TestPremiseAppUatSf.openLa_03LoginUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="confirmInformationTrue(java.lang.reflect.Method)[pri:2, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:01 IST" name="confirmInformationTrue" finished-at="2024-05-16T13:33:03 IST" duration-ms="1858" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.confirmInformationTrue(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmInformationTrue -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:03 IST" name="afterMethod" finished-at="2024-05-16T13:33:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmInformationTrue status=SUCCESS method=TestPremiseAppUatSf.confirmInformationTrue(java.lang.reflect.Method)[pri:2, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingLicenceDuration(java.lang.reflect.Method)[pri:3, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:03 IST" name="fillingLicenceDuration" finished-at="2024-05-16T13:33:08 IST" duration-ms="5168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillingLicenceDuration(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingLicenceDuration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:08 IST" name="afterMethod" finished-at="2024-05-16T13:33:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingLicenceDuration status=SUCCESS method=TestPremiseAppUatSf.fillingLicenceDuration(java.lang.reflect.Method)[pri:3, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingApplicantDetails(java.lang.reflect.Method)[pri:4, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:08 IST" name="fillingApplicantDetails" finished-at="2024-05-16T13:33:21 IST" duration-ms="13249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillingApplicantDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingApplicantDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:21 IST" name="afterMethod" finished-at="2024-05-16T13:33:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingApplicantDetails status=SUCCESS method=TestPremiseAppUatSf.fillingApplicantDetails(java.lang.reflect.Method)[pri:4, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)[pri:5, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:21 IST" name="fillingDesignatedPremisesSupervisor" finished-at="2024-05-16T13:33:31 IST" duration-ms="9338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingDesignatedPremisesSupervisor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:31 IST" name="afterMethod" finished-at="2024-05-16T13:33:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingDesignatedPremisesSupervisor status=SUCCESS method=TestPremiseAppUatSf.fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)[pri:5, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="uploadApplicationEvidence(java.lang.reflect.Method)[pri:6, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:31 IST" name="uploadApplicationEvidence" finished-at="2024-05-16T13:33:34 IST" duration-ms="3319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.uploadApplicationEvidence(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadApplicationEvidence -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:34 IST" name="afterMethod" finished-at="2024-05-16T13:33:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=uploadApplicationEvidence status=SUCCESS method=TestPremiseAppUatSf.uploadApplicationEvidence(java.lang.reflect.Method)[pri:6, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillPremisesDetails(java.lang.reflect.Method)[pri:7, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:34 IST" name="fillPremisesDetails" finished-at="2024-05-16T13:33:45 IST" duration-ms="11271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillPremisesDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillPremisesDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:45 IST" name="afterMethod" finished-at="2024-05-16T13:33:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillPremisesDetails status=SUCCESS method=TestPremiseAppUatSf.fillPremisesDetails(java.lang.reflect.Method)[pri:7, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillBusinessHours(java.lang.reflect.Method)[pri:8, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:45 IST" name="fillBusinessHours" finished-at="2024-05-16T13:33:52 IST" duration-ms="6311" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillBusinessHours(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<Success : Business hours filled successfully> but was:<Error : There are some problemElement <button class="btn dropdown-toggle bs-placeholder btn-default" type="button"> is not clickable at point (528,342) because another element <div class="bs-searchbox"> obscures it
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2, clickElement {id=64e47b2f-97f8-4ec9-97dd-4deb63adb1f5}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:8371, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 6412, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8371/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2)] -> xpath: (//button[@title='Start At'])[2]]
Session ID: 7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<Success : Business hours filled successfully> but was:<Error : There are some problemElement <button class="btn dropdown-toggle bs-placeholder btn-default" type="button"> is not clickable at point (528,342) because another element <div class="bs-searchbox"> obscures it
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2, clickElement {id=64e47b2f-97f8-4ec9-97dd-4deb63adb1f5}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:8371, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 6412, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8371/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2)] -> xpath: (//button[@title='Start At'])[2]]
Session ID: 7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at qa.test.TestPremiseAppUatSf.fillBusinessHours(TestPremiseAppUatSf.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBusinessHours -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:52 IST" name="afterMethod" finished-at="2024-05-16T13:33:52 IST" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBusinessHours status=FAILURE method=TestPremiseAppUatSf.fillBusinessHours(java.lang.reflect.Method)[pri:8, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillLicenceObjectives(java.lang.reflect.Method)[pri:9, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:52 IST" name="fillLicenceObjectives" finished-at="2024-05-16T13:33:54 IST" duration-ms="2172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillLicenceObjectives(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillLicenceObjectives -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:54 IST" name="afterMethod" finished-at="2024-05-16T13:33:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillLicenceObjectives status=SUCCESS method=TestPremiseAppUatSf.fillLicenceObjectives(java.lang.reflect.Method)[pri:9, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillDeclaration(java.lang.reflect.Method)[pri:10, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:54 IST" name="fillDeclaration" finished-at="2024-05-16T13:33:56 IST" duration-ms="2031" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSf.fillDeclaration(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<Success : Declaration filled successfully> but was:<Error : There are some problemElement <button id="declaration_add" class="btn btn-primary" type="button"> is not clickable at point (708,339) because another element <div class="modal-backdrop fade"> obscures it
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2, clickElement {id=a4bf3a8f-fb67-4c17-847c-fdf8f41dff10}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:8371, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 6412, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8371/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2)] -> id: declaration_add]
Session ID: 7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<Success : Declaration filled successfully> but was:<Error : There are some problemElement <button id="declaration_add" class="btn btn-primary" type="button"> is not clickable at point (708,339) because another element <div class="modal-backdrop fade"> obscures it
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2, clickElement {id=a4bf3a8f-fb67-4c17-847c-fdf8f41dff10}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:8371, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 6412, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:8371/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Element: [[FirefoxDriver: firefox on windows (7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2)] -> id: declaration_add]
Session ID: 7e7dfa3b-9096-4f7e-83f7-7da4e3e80cf2>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at qa.test.TestPremiseAppUatSf.fillDeclaration(TestPremiseAppUatSf.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillDeclaration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:56 IST" name="afterMethod" finished-at="2024-05-16T13:33:56 IST" duration-ms="91" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillDeclaration status=FAILURE method=TestPremiseAppUatSf.fillDeclaration(java.lang.reflect.Method)[pri:10, instance:qa.test.TestPremiseAppUatSf@cc43f62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.test.TestPremiseAppUatSf@cc43f62]" started-at="2024-05-16T13:33:56 IST" name="afterTest" finished-at="2024-05-16T13:33:56 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.test.TestPremiseAppUatSf -->
    </test> <!-- FireFoxTest -->
    <test started-at="2024-05-16T13:33:56 IST" name="FireFoxTest1" finished-at="2024-05-16T13:35:19 IST" duration-ms="82724">
      <class name="qa.test.TestPremiseAppUatSfbo">
        <test-method is-config="true" signature="beforeTestMethod(java.lang.String)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:33:56 IST" name="beforeTestMethod" finished-at="2024-05-16T13:34:00 IST" duration-ms="3387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method signature="openLa_03LoginUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:00 IST" name="openLa_03LoginUrl" finished-at="2024-05-16T13:34:10 IST" duration-ms="9840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.openLa_03LoginUrl(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLa_03LoginUrl -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:10 IST" name="afterMethod" finished-at="2024-05-16T13:34:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLa_03LoginUrl status=SUCCESS method=TestPremiseAppUatSfbo.openLa_03LoginUrl(java.lang.reflect.Method)[pri:1, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillBusinessDetails(java.lang.reflect.Method)[pri:2, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:10 IST" name="fillBusinessDetails" finished-at="2024-05-16T13:34:14 IST" duration-ms="4666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillBusinessDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBusinessDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:14 IST" name="afterMethod" finished-at="2024-05-16T13:34:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBusinessDetails status=SUCCESS method=TestPremiseAppUatSfbo.fillBusinessDetails(java.lang.reflect.Method)[pri:2, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="confirmInformationTrue(java.lang.reflect.Method)[pri:3, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:14 IST" name="confirmInformationTrue" finished-at="2024-05-16T13:34:16 IST" duration-ms="1951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.confirmInformationTrue(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmInformationTrue -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:16 IST" name="afterMethod" finished-at="2024-05-16T13:34:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=confirmInformationTrue status=SUCCESS method=TestPremiseAppUatSfbo.confirmInformationTrue(java.lang.reflect.Method)[pri:3, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingLicenceDuration(java.lang.reflect.Method)[pri:4, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:16 IST" name="fillingLicenceDuration" finished-at="2024-05-16T13:34:21 IST" duration-ms="5141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillingLicenceDuration(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingLicenceDuration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:21 IST" name="afterMethod" finished-at="2024-05-16T13:34:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingLicenceDuration status=SUCCESS method=TestPremiseAppUatSfbo.fillingLicenceDuration(java.lang.reflect.Method)[pri:4, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingApplicantDetails(java.lang.reflect.Method)[pri:5, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:21 IST" name="fillingApplicantDetails" finished-at="2024-05-16T13:34:35 IST" duration-ms="13166" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillingApplicantDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingApplicantDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:35 IST" name="afterMethod" finished-at="2024-05-16T13:34:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingApplicantDetails status=SUCCESS method=TestPremiseAppUatSfbo.fillingApplicantDetails(java.lang.reflect.Method)[pri:5, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)[pri:6, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:35 IST" name="fillingDesignatedPremisesSupervisor" finished-at="2024-05-16T13:34:44 IST" duration-ms="9318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillingDesignatedPremisesSupervisor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:44 IST" name="afterMethod" finished-at="2024-05-16T13:34:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillingDesignatedPremisesSupervisor status=SUCCESS method=TestPremiseAppUatSfbo.fillingDesignatedPremisesSupervisor(java.lang.reflect.Method)[pri:6, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="uploadApplicationEvidence(java.lang.reflect.Method)[pri:7, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:44 IST" name="uploadApplicationEvidence" finished-at="2024-05-16T13:34:47 IST" duration-ms="3299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.uploadApplicationEvidence(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uploadApplicationEvidence -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:47 IST" name="afterMethod" finished-at="2024-05-16T13:34:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=uploadApplicationEvidence status=SUCCESS method=TestPremiseAppUatSfbo.uploadApplicationEvidence(java.lang.reflect.Method)[pri:7, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillPremisesDetails(java.lang.reflect.Method)[pri:8, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:47 IST" name="fillPremisesDetails" finished-at="2024-05-16T13:34:59 IST" duration-ms="11263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillPremisesDetails(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillPremisesDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:59 IST" name="afterMethod" finished-at="2024-05-16T13:34:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillPremisesDetails status=SUCCESS method=TestPremiseAppUatSfbo.fillPremisesDetails(java.lang.reflect.Method)[pri:8, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillBusinessHours(java.lang.reflect.Method)[pri:9, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:34:59 IST" name="fillBusinessHours" finished-at="2024-05-16T13:35:10 IST" duration-ms="11042" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillBusinessHours(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.ComparisonFailure">
            <message>
              <![CDATA[expected:<Success : Business hours filled successfully> but was:<Error : There are some problemExpected condition failed: waiting for element to be clickable: [[FirefoxDriver: firefox on windows (c62fdaa5-986b-4f8c-b674-31f8d23e82c3)] -> xpath: (//input[@type='checkbox' and @name='openclose'])[7]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:42500, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 9892, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:42500/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c62fdaa5-986b-4f8c-b674-31f8d23e82c3>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.ComparisonFailure: expected:<Success : Business hours filled successfully> but was:<Error : There are some problemExpected condition failed: waiting for element to be clickable: [[FirefoxDriver: firefox on windows (c62fdaa5-986b-4f8c-b674-31f8d23e82c3)] -> xpath: (//input[@type='checkbox' and @name='openclose'])[7]] (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 125.0.3, moz:accessibilityChecks: false, moz:buildID: 20240425211020, moz:debuggerAddress: 127.0.0.1:42500, moz:geckodriverVersion: 0.34.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 9892, moz:profile: C:\Users\Gaurav\AppData\Loc..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://127.0.0.1:42500/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: c62fdaa5-986b-4f8c-b674-31f8d23e82c3>
at junit.framework.Assert.assertEquals(Assert.java:81)
at junit.framework.Assert.assertEquals(Assert.java:87)
at qa.test.TestPremiseAppUatSfbo.fillBusinessHours(TestPremiseAppUatSfbo.java:127)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillBusinessHours -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:10 IST" name="afterMethod" finished-at="2024-05-16T13:35:10 IST" duration-ms="68" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillBusinessHours status=FAILURE method=TestPremiseAppUatSfbo.fillBusinessHours(java.lang.reflect.Method)[pri:9, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillLicenceObjectives(java.lang.reflect.Method)[pri:10, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:10 IST" name="fillLicenceObjectives" finished-at="2024-05-16T13:35:12 IST" duration-ms="2204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillLicenceObjectives(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillLicenceObjectives -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:12 IST" name="afterMethod" finished-at="2024-05-16T13:35:12 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillLicenceObjectives status=SUCCESS method=TestPremiseAppUatSfbo.fillLicenceObjectives(java.lang.reflect.Method)[pri:10, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fillDeclaration(java.lang.reflect.Method)[pri:11, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:12 IST" name="fillDeclaration" finished-at="2024-05-16T13:35:19 IST" duration-ms="7200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void qa.test.TestPremiseAppUatSfbo.fillDeclaration(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fillDeclaration -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:19 IST" name="afterMethod" finished-at="2024-05-16T13:35:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fillDeclaration status=SUCCESS method=TestPremiseAppUatSfbo.fillDeclaration(java.lang.reflect.Method)[pri:11, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:qa.test.TestPremiseAppUatSfbo@52f27fbd]" started-at="2024-05-16T13:35:19 IST" name="afterTest" finished-at="2024-05-16T13:35:19 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- qa.test.TestPremiseAppUatSfbo -->
    </test> <!-- FireFoxTest1 -->
  </suite> <!-- Suite -->
</testng-results>
